class o{static async perform(e,i,r,a){await this[e.action]?.(e,i,r,a)}static async filter_children(e,i,r,a){const t=await crs.process.getValue(e.args.filter,i,r,a),c=await crs.process.getValue(e.args.hierarchical??!1,i,r,a);return await u(e.args.element,t,c)}static async toggle_selection(e,i,r,a){const t=await crs.dom.get_element(e.args.target,i,r,a),c=await crs.process.getValue(e.args.multiple||!1,i,r,a),s="aria-selected";if(c!==!0){const l=t.parentElement.querySelector("[aria-selected='true']");if(l===t)return;l?.removeAttribute(s),t.setAttribute(s,"true")}else t.hasAttribute(s)&&t.getAttribute(s)==="true"?t.removeAttribute(s):t.setAttribute(s,"true")}static async get_selected_state(e,i,r,a){const t=await crs.dom.get_element(e.args.target,i,r,a),c={};for(const s of t.children)c[s.dataset.value]=s.getAttribute("aria-selected")=="true";return c}}async function u(n,e,i){n=await crs.dom.get_element(n);const r=e.length>0;let a=0;for(let t of n.children){if(t.removeAttribute("aria-hidden"),t.tagName=="HR"&&r){t.setAttribute("aria-hidden","true");continue}const c=i===!0?t.querySelector("ul"):null;if(c){if(await u(c,e,!0)==0){t.setAttribute("aria-hidden","true");continue}}else if(t.dataset.tags&&r&&t.dataset.tags.indexOf(e)==-1){t.setAttribute("aria-hidden","true");continue}a++}return a}crs.intent.dom_collection=o;export{o as DomCollectionActions};
