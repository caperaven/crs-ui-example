class u{static async perform(a,s,t,r){await this[a.action](a,s,t,r)}static async observe(a,s,t,r){const e=await crs.dom.get_element(a.args.element,s,t,r),c=await crs.process.getValue(a.args.properties,s,t,r),n=await crs.process.getValue(a.args.callback,s,t,r);e._dataId==null&&(e._dataId=crs.binding.data.addObject(e.id));let l=e._dataId;e._processObserver=e._processObserver||{nextId:0};const o=b(e),d=await f(e,c,o);e._processObserver[o]={properties:c,eval:d,callback:n};for(let g of c)await crs.binding.data.addCallback(l,g,e._processObserver[o].eval);return a.args.target!=null&&await crs.process.setValue(a.args.target,o,s,t,r),o}static async unobserve(a,s,t,r){const e=await crs.dom.get_element(a.args.element,s,t,r),c=await crs.process.getValue(a.args.ids,s,t,r);for(let n of c){n=await crs.process.getValue(n,s,t,r);const l=e._processObserver[n];for(const o of l.properties)await crs.binding.data.removeCallback(e._dataId,o,l.eval);l.properties=null,l.eval=null,l.callback=null,delete e._processObserver[n]}}static async notify_ready(a,s,t,r){const e=await crs.dom.get_element(a.args.element,s,t,r);e.dataset.ready="true",delete e.dataset.loading,e.dispatchEvent(new CustomEvent("ready",{bubbles:!0,composed:!0}))}static async notify_loading(a,s,t,r){const e=await crs.dom.get_element(a.args.element,s,t,r);e.dataset.loading="true",e.dispatchEvent(new CustomEvent("loading",{bubbles:!0,composed:!0}))}static async on_ready(a,s,t,r){const e=await crs.dom.get_element(a.args.element,s,t,r),c=await crs.process.getValue(a.args.callback,s,t,r),n=await crs.process.getValue(a.args.caller,s,t,r);if(e.dataset.ready=="true")return await c.call(n);const l=async()=>{e.removeEventListener("ready",l),await c.call(n)};e.addEventListener("ready",l)}static async on_loading(a,s,t,r){const e=await crs.dom.get_element(a.args.element,s,t,r),c=await crs.process.getValue(a.args.callback,s,t,r),n=await crs.process.getValue(a.args.caller,s,t,r);if(e.dataset.loading=="true")return await c.call(n);const l=async()=>{e.removeEventListener("loading",l),await c.call(n)};e.addEventListener("loading",l)}static async wait_for_element_render(a,s,t,r){const e=await crs.dom.get_element(a.args.element,s,t,r);return e.offsetWidth>0&&e.offsetHeight>0?!0:new Promise(c=>{const n=new ResizeObserver(()=>{e.offsetWidth>0&&e.offsetHeight>0&&(n.disconnect(),c(!0))});n.observe(e)})}}function b(i){const a=i._processObserver.nextId;return i._processObserver.nextId=a+1,a}async function f(i,a,s){let t=["if ( "];for(const e of a)t.push(`(await crs.binding.data.getProperty(this._dataId, "${e}"))  != null && `);return t.push(`) { this._processObserver[${s}].callback.call(this) };`),t=t.join("").replace("&& )",")"),await new crs.classes.AsyncFunction(t).bind(i)}crs.intent.component=u;export{u as ComponentActions};
